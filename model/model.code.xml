<?xml version="1.0" encoding="UTF-8"?>
<generate-code>

<node name="vcfhead" type="vcf-filter" handler-class="com.github.lindenb.jvarkit.tools.misc.VcfHead">
	<initialize>
	instance.setCount(this.getPropertyNumberOfLinesValue());
	</initialize>
</node>


<node name="vcftail" type="vcf-filter" handler-class="com.github.lindenb.jvarkit.tools.misc.VcfTail">
	<initialize>
	instance.setCount(this.getPropertyNumberOfLinesValue());
	</initialize>
</node>


<node name="vcffilterjs" type="vcf-filter" handler-class="com.github.lindenb.jvarkit.tools.vcffilterjs.VCFFilterJS">
	<initialize>
	instance.setScriptExpression(this.getPropertyJavascriptValue());
	if( instance.initializeKnime() != 0)
		{
		throw new RuntimeException("Cannot initialize VCFFilterJS. Check java engine and script syntax");
		}
	</initialize>
</node>

<node name="vcffilterso" type="vcf-filter" handler-class="com.github.lindenb.jvarkit.tools.misc.VcfFilterSequenceOntology">
	<initialize>
  		instance.setInverseResult(super.isPropertyInverseSelectionValue());
  		instance.setReasoning(super.isPropertyEnableReasoningValue());
  		for(String acn: this.getPropertyTermsValue().split("[ ,\n\t]"))
  			{
  			instance.addTerm(acn);
  			}
  		if( instance.initializeKnime() != 0)
			{
			throw new RuntimeException("Cannot initialize vcffilterso");
			}
	</initialize>
</node>



<node name="vcfgo" type="vcf-filter" handler-class="com.github.lindenb.jvarkit.tools.vcfgo.VcfGeneOntology">
	<initialize>
		
			instance.setGeneOntologyUrl(this.getPropertyGoUrlValue());
			instance.setGeneOntologyAnnotationUrl(this.getPropertyGoaUrlValue());
			instance.setRemoveIfNoGo(this.isPropertyRemoveIfNoGoValue());
			instance.setInverseFilter(this.isPropertyInverseFilterValue());
			
			
			if(this.getPropertyFilterNameValue().trim().isEmpty())
				{
				instance.setFilterName(this.getPropertyFilterNameValue().trim());
				}
			
	  		for(String acn: this.getPropertyGoTermsValue().split("[ ,\n\t]"))
	  			{
	  			if(acn.isEmpty()) continue;
	  			instance.addGoTerm(acn);
	  			}
			if( instance.initializeKnime() != 0)
				{
				throw new RuntimeException("Cannot initialize vcfgo");
				}
	</initialize>
</node>


</generate-code>
