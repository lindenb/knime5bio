<?xml version="1.0" encoding="UTF-8"?>
<node name="writefasta" label="Write Fasta" >

  <description>
     <h3>Motivation</h3>
     <p>Write sequences to a Fasta file</p>
     <xi:include href="footer.html" xpointer="xpointer(/div/*)" parse="xml" />
  </description>


  <inPort name="input">
  </inPort>
  <property type="file-save" name="fastaOut" >
  </property>

  <property type="column" name="title" label="Title" description="Fasta title" data-type="string">
  </property>

  <property type="column" name="sequence" label="Sequence" description="Fasta Sequence" data-type="string">
  </property>

  <property type="int" name="fold" label="Fold size" description="Fold sequences greater than..." default="60">
  </property>



  <code>
      <import>
      import org.knime.core.data.container.CloseableRowIterator;
      import java.io.*;
      </import>
      <body>
    @Override
    protected BufferedDataTable[] execute(final BufferedDataTable[] inData, final ExecutionContext exec) throws Exception
        {
        CloseableRowIterator iter=null;
        BufferedDataTable inTable=inData[0];
        int fold = this.getPropertyFoldValue();
        int tIndex = this.findTitleRequiredColumnIndex(inTable.getDataTableSpec());
        int sIndex = this.findSequenceRequiredColumnIndex(inTable.getDataTableSpec());
        PrintWriter w =null;
        try
            {
            w= openFastaOutForPrinting();

            int nRows=0;
            double total=inTable.getRowCount();
            iter=inTable.iterator();
            while(iter.hasNext())
                {
                DataRow row=iter.next();
                DataCell tCell =row.getCell(tIndex);

                DataCell sCell =row.getCell(sIndex);

                w.print(">");
                if(!tCell.isMissing())
                    { 
                    w.print(StringCell.class.cast(tCell).getStringValue());
                    }
                if(!sCell.isMissing())
                    {
                    String sequence = StringCell.class.cast(sCell).getStringValue();
                    for(int i=0;i&lt;sequence.length();++i)
                        {
                        if(i%fold == 0) w.println();
                        w.print(sequence.charAt(i));
                        exec.checkCanceled();
                        }
                    }
                w.println();

                exec.checkCanceled();
                exec.setProgress(nRows/total,"Saving Fasta");
                ++nRows;
                }
            w.flush();
            return new BufferedDataTable[0];
            }
        finally
            {
            if(w!=null) w.close();
            }
        }
      </body>
  </code>
</node>

